Resources:
  PayBalanceRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: PayBalanceApi

  PaymentResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - PayBalanceRestApi
          - RootResourceId
      PathPart: payments
      RestApiId:
        Ref: PayBalanceRestApi
  
  TransactionResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - PayBalanceRestApi
          - RootResourceId
      PathPart: transactions
      RestApiId:
        Ref: PayBalanceRestApi

  AccountsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - PayBalanceRestApi
          - RootResourceId
      PathPart: accounts
      RestApiId:
        Ref: PayBalanceRestApi

  AccountIdResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: AccountsResource
      PathPart: "{accountId}"
      RestApiId:
        Ref: PayBalanceRestApi

  PaymentMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId:
        Ref: PaymentResource
      RestApiId:
        Ref: PayBalanceRestApi
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${self:custom.region}:states:action/StartExecution
        Credentials: ${self:custom.roleArn}
        RequestTemplates:
          application/json: |
            #set($inputRoot = $input.path('$'))
            #set($inputRoot.requestId = $context.requestId)
            {
              "input": "$util.escapeJavaScript($input.json('$'))",
              "stateMachineArn": "${self:custom.arnPaymentStf}"
            }
        IntegrationResponses:
          - StatusCode: 201
            ResponseTemplates:
              application/json: |
                {
                  "message": "Payment registered successfully",
                  "transactionId": "$context.requestId"
                }
          - StatusCode: 400
            SelectionPattern: '4\d{2}'
            ResponseTemplates:
              application/json: |
                {
                  "message": "Something was wrong"
                }
      MethodResponses:
        - StatusCode: 201
        - StatusCode: 400

  FakeTransactionMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId:
        Ref: TransactionResource
      RestApiId:
        Ref: PayBalanceRestApi
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: |
            {
              "statusCode": 200
            }
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: |
                {
                  "id": "$context.requestTimeEpoch",
                  "message": "Success"
                }
      MethodResponses:
        - StatusCode: 200

  GetAccountMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId:
        Ref: AccountIdResource
      RestApiId:
        Ref: PayBalanceRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${self:custom.region}:lambda:path/2015-03-31/functions/${self:custom.arnGetAccount}/invocations
        Credentials: ${self:custom.roleArn}
        IntegrationResponses:
            - StatusCode: 200
              ResponseTemplates:
                application/json: |
                  {
                    "id": "$input.path('$.id')",
                    "amount": "$input.path('$.amount')"
                  }
            - StatusCode: 400
              ResponseTemplates:
                application/json: |
                  {
                    "message": "$input.path('$.message')"
                  }
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: "Empty"
        - StatusCode: 400
          ResponseModels:
            application/json: "Empty"
