name: SF_PAYMENT_WORKFLOW
type: EXPRESS
events:
  - http:
      method: POST
      path: 'V1/payments'
      action: StartSyncExecution
      request:
        template:
          application/json: ${file(config/request/request-stepfunction-payments.vm)}
      response:
        template:
          application/json: ${file(config/response/response-stepfunction-payments.vm)}
loggingConfig:
  level: ALL
  includeExecutionData: true
  destinations:
    - Fn::GetAtt: [StepFuncLogGroup, Arn]

definition:
  Comment: WorkFlow Payments
  StartAt: ValidateUser
  States:
    ValidateUser:
      Type: Task
      Resource: arn:aws:states:::dynamodb:getItem
      InputPath: "$"
      Parameters:
        TableName: ${self:provider.environment.DYNAMODB_TABLE_USERS}
        Key:
          userId:
            S.$: "$.input.userId"
      ResultPath: "$.ValidateUserOutput"
      Next: UserValidationSuccessful
    UserValidationSuccessful:
      Type: Choice
      Choices:
      - And:
        - Variable: "$.ValidateUserOutput.Item"
          IsPresent: true
        - Variable: "$.ValidateUserOutput.Item.userId.S"
          IsNull: false
        Next: ExecutePayment
      Default: Fail
    ExecutePayment:
      Type: Task
      Resource: !GetAtt payments.Arn
      InputPath: "$"
      Parameters:
        body:
          action: create
          userId.$: "$.input.userId"
          amount.$: "$.input.amount"
      Retry:
      - ErrorEquals:
        - States.ALL
        IntervalSeconds: 2
        MaxAttempts: 2
        BackoffRate: 1
      ResultPath: "$.ExecutePaymentOutput"
      Next: PaymentSuccessful
    PaymentSuccessful:
      Type: Choice
      Choices:
      - And:
        - Variable: "$.ExecutePaymentOutput.response.status"
          IsPresent: true
        - Variable: "$.ExecutePaymentOutput.response.status"
          StringEquals: OK
        Next: SaveTransactionPayment
      Default: Fail
    SaveTransactionPayment:
      Type: Task
      Resource: arn:aws:states:::dynamodb:putItem
      InputPath: "$"
      Parameters:
        TableName: ${self:provider.environment.DYNAMODB_TABLE_TRANSACTIONS}
        Item:
          transactionId:
            S.$: $.ExecutePaymentOutput.response.transactionId
          userId:
            S.$: "$.input.userId"
          amount:
            N.$: States.Format('{}', $.input.amount)
      ResultPath: "$.SaveTransactionPaymentOutput"
      Next: Success
    Success:
      Type: Succeed
      InputPath: "$"
      OutputPath: "$.ExecutePaymentOutput.response.transactionId"
    Fail:
      Type: Fail
